@model ProyectoBasesDatos.Models.Hospital
@{
    ViewData["Title"] = "Editar Hospital";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-warning text-white">
            <h2 class="mb-0"><i class="fas fa-hospital-alt me-2"></i>Editar Hospital</h2>
        </div>
        <div class="card-body">
            <form asp-action="Edit" id="hospitalForm" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="alert alert-danger alert-dismissible fade show" role="alert">
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    <strong><i class="fas fa-exclamation-triangle me-2"></i>Por favor corrija los siguientes errores:</strong>
                </div>

                <input type="hidden" asp-for="Id" />

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="HName" class="form-label fw-bold">Nombre del Hospital</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-hospital-alt"></i></span>
                                <input asp-for="HName" class="form-control" required maxlength="100" placeholder="Ingrese el nombre completo del hospital" />
                            </div>
                            <span asp-validation-for="HName" class="text-danger"></span>
                            <div id="nameCounter" class="form-text">0/100 caracteres</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="HAddress" class="form-label fw-bold">Dirección</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                <input asp-for="HAddress" class="form-control" required maxlength="200" placeholder="Ingrese la dirección completa" />
                            </div>
                            <span asp-validation-for="HAddress" class="text-danger"></span>
                            <div id="addressCounter" class="form-text">0/200 caracteres</div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Phone" class="form-label fw-bold">Teléfono de Contacto</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                <input asp-for="Phone" class="form-control phone-mask" required pattern="\d{10}"
                                       placeholder="Ej: 9912345678" title="Debe ingresar 10 dígitos numéricos" />
                            </div>
                            <span asp-validation-for="Phone" class="text-danger"></span>
                            <small class="form-text text-muted">Ingrese 10 dígitos sin espacios ni caracteres especiales.</small>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label fw-bold">ID del Hospital</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-fingerprint"></i></span>
                                <input value="@Model.Id" class="form-control" readonly disabled />
                            </div>
                            <small class="form-text text-muted">El código único no puede ser modificado.</small>
                        </div>
                    </div>
                </div>

                <hr class="my-4">

                <div class="d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Volver a la Lista
                    </a>
                    <div>
                        <button type="reset" class="btn btn-outline-danger me-2">
                            <i class="fas fa-undo me-2"></i>Restaurar Valores
                        </button>
                        <button type="submit" class="btn btn-warning text-white">
                            <i class="fas fa-save me-2"></i>Guardar Cambios
                        </button>
                    </div>
                </div>
            </form>
        </div>
        <div class="card-footer bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted">Última actualización: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</small>
                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-sm btn-info text-white">
                    <i class="fas fa-eye me-1"></i>Ver Detalles
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Establecer valores iniciales de los contadores
            updateCharCounter("#HName", "#nameCounter", 100);
            updateCharCounter("#HAddress", "#addressCounter", 200);

            // Contador de caracteres para nombre
            $("#HName").on("input", function() {
                updateCharCounter("#HName", "#nameCounter", 100);
            });

            // Contador de caracteres para dirección
            $("#HAddress").on("input", function() {
                updateCharCounter("#HAddress", "#addressCounter", 200);
            });

            // Función para actualizar los contadores
            function updateCharCounter(inputId, counterId, maxLength) {
                var currentLength = $(inputId).val().length;
                $(counterId).text(currentLength + "/" + maxLength + " caracteres");

                // Cambiar color si se acerca al límite
                if (currentLength > maxLength * 0.8) {
                    $(counterId).removeClass("text-muted").addClass("text-warning");
                } else {
                    $(counterId).removeClass("text-warning").addClass("text-muted");
                }
            }

            // Máscara para el teléfono
            $(".phone-mask").on("input", function() {
                $(this).val($(this).val().replace(/[^0-9]/g, "").substring(0, 10));
            });

            // Validación del formulario antes de enviar
            $("#hospitalForm").on("submit", function(e) {
                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();

                    // Mostrar mensaje de error
                    Swal.fire({
                        icon: 'error',
                        title: 'Datos incompletos',
                        text: 'Por favor complete todos los campos requeridos correctamente',
                        confirmButtonColor: '#ffc107'
                    });
                } else {
                    // Mostrar mensaje de éxito (opcional)
                    Swal.fire({
                        icon: 'success',
                        title: 'Procesando...',
                        text: 'Actualizando información del hospital',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }

                $(this).addClass('was-validated');
            });

            // Botón restaurar valores
            $("button[type='reset']").click(function(e) {
                e.preventDefault();

                Swal.fire({
                    title: '¿Restaurar valores originales?',
                    text: "Se descartarán los cambios realizados",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Sí, restaurar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Recargar la página para restaurar valores originales
                        location.reload();
                    }
                });
            });
        });
    </script>
}